plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + project.minecraft_version
group = project.maven_group

minecraft {
}

test {
    useJUnitPlatform()
}

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    mavenCentral()
    mavenLocal()
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    testImplementation(
            'org.assertj:assertj-core:3.12.2',
            'org.junit.jupiter:junit-jupiter-api:5.4.2',
            'org.junit.jupiter:junit-jupiter-params:5.4.2',
            'org.hamcrest:hamcrest-library:2.2'
    )
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')

    if(project.doBuild.toBoolean()) {
        modImplementation "net.barribob:maelstrom-library:${project.maelstrom_version}-${project.minecraft_maelstrom_version}"
        modImplementation "io.github.stuff_stuffs.multipart_entities:MultipartEntities:${project.multipart_version}"
    } else {
        implementation "net.barribob:maelstrom-library:${project.maelstrom_version}-${project.minecraft_maelstrom_version}"
        implementation "io.github.stuff_stuffs.multipart_entities:MultipartEntities:${project.multipart_version}"
    }

    include "net.barribob:maelstrom-library:${project.maelstrom_version}-${project.minecraft_maelstrom_version}"
    include "io.github.stuff_stuffs.multipart_entities:MultipartEntities:${project.multipart_version}"

    modImplementation "software.bernie.geckolib:geckolib-${project.geckolib_minecraft_version}:${project.geckolib_version}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cardinal_components_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_components_version}"

    modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude module: "fabric-api"
    }
    modRuntime("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude module: "fabric-api"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing.repositories {
    // mavenLocal()
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"